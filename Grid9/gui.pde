/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:menu:938295:
  appc.background(250);
} //_CODE_:menu:938295:

public void restartAnim(GButton source, GEvent event) { //_CODE_:restartButton:644590:
  v1 = new Vector(0, 0, 'o');
  v2 = new Vector(0, 0, 'o');
  isAdd = false;
  isSub = false;
  chosePointButton.setText("Chose your first point");
  intro.setText("Click the button then chose two points on the screen.");
  rMagnitude.setText(". . .");
  rPosition.setText(". . .");
  rAngle.setText(". . .");
  v1Position.setText("(a, b)");
  v2Position.setText("(a, b)");
  v1Magnitude.setText(". . .");
  v2Magnitude.setText(". . .");
  v1Angle.setText(". . . degrees");
  v2Angle.setText(". . . degrees");
  
} //_CODE_:restartButton:644590:

public void chosingPoints(GButton source, GEvent event) { //_CODE_:chosePointButton:292585:
  if(isAdd == false && isSub == false) {
    clicks = 0;
    isPoint = true;
  }
    
} //_CODE_:chosePointButton:292585:

public void addOption(GButton source, GEvent event) { //_CODE_:addButton:629364:
  isAdd = true;
  isSub = false;
} //_CODE_:addButton:629364:

public void subOptioin(GButton source, GEvent event) { //_CODE_:subButton:442325:
  isSub = true;
  isAdd = false;
} //_CODE_:subButton:442325:

public void pauseAnim(GButton source, GEvent event) { //_CODE_:pauseButton:712985:
  noLoop();
} //_CODE_:pauseButton:712985:

public void continueAnim(GButton source, GEvent event) { //_CODE_:continueButton:686780:
  loop();
} //_CODE_:continueButton:686780:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  menu = GWindow.getWindow(this, "Window title", 0, 0, 300, 600, JAVA2D);
  menu.noLoop();
  menu.setActionOnClose(G4P.KEEP_OPEN);
  menu.addDrawHandler(this, "win_draw1");
  restartButton = new GButton(menu, 210, 180, 80, 20);
  restartButton.setText("Restart");
  restartButton.setLocalColorScheme(GCScheme.RED_SCHEME);
  restartButton.addEventHandler(this, "restartAnim");
  chosePointButton = new GButton(menu, 140, 50, 150, 30);
  chosePointButton.setText("Chose your first point");
  chosePointButton.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  chosePointButton.addEventHandler(this, "chosingPoints");
  Welcome = new GLabel(menu, 10, 10, 280, 30);
  Welcome.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  Welcome.setText("Welcome :)");
  Welcome.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  Welcome.setOpaque(true);
  intro = new GLabel(menu, 10, 50, 111, 108);
  intro.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  intro.setText("Click the button then chose two points on the screen.");
  intro.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  intro.setOpaque(true);
  addButton = new GButton(menu, 140, 90, 150, 30);
  addButton.setText("Addition");
  addButton.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  addButton.addEventHandler(this, "addOption");
  subButton = new GButton(menu, 140, 130, 150, 30);
  subButton.setText("Subtraction");
  subButton.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  subButton.addEventHandler(this, "subOptioin");
  pauseButton = new GButton(menu, 110, 180, 80, 20);
  pauseButton.setText("Pause");
  pauseButton.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  pauseButton.addEventHandler(this, "pauseAnim");
  label3 = new GLabel(menu, 10, 220, 280, 30);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Vector Information");
  label3.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label3.setOpaque(true);
  label4 = new GLabel(menu, 10, 290, 80, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Position");
  label4.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label4.setOpaque(true);
  label5 = new GLabel(menu, 10, 320, 80, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Magnitude");
  label5.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label5.setOpaque(true);
  label6 = new GLabel(menu, 10, 480, 280, 30);
  label6.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label6.setText("Resultant Vector");
  label6.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label6.setOpaque(true);
  label7 = new GLabel(menu, 10, 350, 80, 50);
  label7.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label7.setText("Angle from positive x-axis");
  label7.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label7.setOpaque(true);
  label8 = new GLabel(menu, 110, 260, 180, 20);
  label8.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label8.setText("Vector 1                 Vector 2");
  label8.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label8.setOpaque(true);
  v1Position = new GLabel(menu, 110, 290, 80, 20);
  v1Position.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  v1Position.setText("(a, b)");
  v1Position.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  v1Position.setOpaque(true);
  v2Position = new GLabel(menu, 210, 290, 80, 20);
  v2Position.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  v2Position.setText("(a, b)");
  v2Position.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  v2Position.setOpaque(true);
  v1Magnitude = new GLabel(menu, 110, 320, 80, 20);
  v1Magnitude.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  v1Magnitude.setText(". . .");
  v1Magnitude.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  v1Magnitude.setOpaque(true);
  v2Magnitude = new GLabel(menu, 210, 320, 80, 20);
  v2Magnitude.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  v2Magnitude.setText(". . .");
  v2Magnitude.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  v2Magnitude.setOpaque(true);
  v1Angle = new GLabel(menu, 110, 350, 80, 50);
  v1Angle.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  v1Angle.setText(". . . degrees");
  v1Angle.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  v1Angle.setOpaque(true);
  v2Angle = new GLabel(menu, 210, 350, 80, 50);
  v2Angle.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  v2Angle.setText(". . . degrees");
  v2Angle.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  v2Angle.setOpaque(true);
  label15 = new GLabel(menu, 10, 420, 170, 40);
  label15.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label15.setText("Dot product between vector 1 and vector 2");
  label15.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label15.setOpaque(true);
  dotProductDisplay = new GLabel(menu, 190, 420, 100, 40);
  dotProductDisplay.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  dotProductDisplay.setText(". . .");
  dotProductDisplay.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  dotProductDisplay.setOpaque(true);
  label16 = new GLabel(menu, 10, 520, 90, 20);
  label16.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label16.setText("Position");
  label16.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label16.setOpaque(true);
  label17 = new GLabel(menu, 110, 520, 90, 20);
  label17.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label17.setText("Magnitude");
  label17.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label17.setOpaque(true);
  label18 = new GLabel(menu, 210, 520, 80, 20);
  label18.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label18.setText("Angle");
  label18.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  label18.setOpaque(true);
  rPosition = new GLabel(menu, 10, 550, 90, 30);
  rPosition.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  rPosition.setText(". . .");
  rPosition.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  rPosition.setOpaque(true);
  rMagnitude = new GLabel(menu, 110, 550, 90, 30);
  rMagnitude.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  rMagnitude.setText(". . .");
  rMagnitude.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  rMagnitude.setOpaque(true);
  rAngle = new GLabel(menu, 210, 550, 80, 30);
  rAngle.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  rAngle.setText(". . .");
  rAngle.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  rAngle.setOpaque(true);
  continueButton = new GButton(menu, 10, 180, 80, 20);
  continueButton.setText("Continue");
  continueButton.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  continueButton.addEventHandler(this, "continueAnim");
  menu.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow menu;
GButton restartButton; 
GButton chosePointButton; 
GLabel Welcome; 
GLabel intro; 
GButton addButton; 
GButton subButton; 
GButton pauseButton; 
GLabel label3; 
GLabel label4; 
GLabel label5; 
GLabel label6; 
GLabel label7; 
GLabel label8; 
GLabel v1Position; 
GLabel v2Position; 
GLabel v1Magnitude; 
GLabel v2Magnitude; 
GLabel v1Angle; 
GLabel v2Angle; 
GLabel label15; 
GLabel dotProductDisplay; 
GLabel label16; 
GLabel label17; 
GLabel label18; 
GLabel rPosition; 
GLabel rMagnitude; 
GLabel rAngle; 
GButton continueButton; 
